{"remainingRequest":"/Users/fabiundrods/Documents/Programmierung/Vue/Projekte/vue-todo/node_modules/babel-loader/lib/index.js!/Users/fabiundrods/Documents/Programmierung/Vue/Projekte/vue-todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fabiundrods/Documents/Programmierung/Vue/Projekte/vue-todo/src/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fabiundrods/Documents/Programmierung/Vue/Projekte/vue-todo/src/components/TodoList.vue","mtime":1536331083000},{"path":"/Users/fabiundrods/Documents/Programmierung/Vue/Projekte/vue-todo/node_modules/cache-loader/dist/cjs.js","mtime":1536254082000},{"path":"/Users/fabiundrods/Documents/Programmierung/Vue/Projekte/vue-todo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fabiundrods/Documents/Programmierung/Vue/Projekte/vue-todo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"TodoList\",\n  data: function data() {\n    return {\n      listTitle: \"Default List\",\n      listItems: []\n    };\n  },\n  methods: {\n    generateNewItemId: function generateNewItemId() {\n      return this.listItems.length > 0 ? this.listItems[this.listItems.length - 1].id + 1 : 0;\n    },\n    generateName: function generateName() {\n      var name = this.$refs.newItem.value;\n      return name.charAt(0).toUpperCase() + name.slice(1);\n    },\n    addNewItem: function addNewItem() {\n      var newItem = {\n        id: this.generateNewItemId(),\n        name: this.generateName()\n      };\n      this.listItems.push(newItem);\n      this.saveLocalStorage(JSON.stringify(this.listItems));\n      this.$refs.newItem.value = '';\n    },\n    removeItem: function removeItem(item) {\n      var index = this.listItems.findIndex(function (element) {\n        return element.id === item;\n      });\n      this.listItems.splice(index, 1);\n      this.saveLocalStorage(JSON.stringify(this.listItems));\n    },\n    saveLocalStorage: function saveLocalStorage(stringListItens) {\n      localStorage.setItem('listItens', stringListItens);\n    },\n    populateList: function populateList() {\n      var _this = this;\n\n      if (localStorage.getItem('listItens')) {\n        var storage = JSON.parse(localStorage.getItem('listItens'));\n        storage.forEach(function (element) {\n          _this.listItems.push(element);\n        });\n      }\n    }\n  },\n  created: function created() {\n    this.populateList();\n  }\n};",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,eAAA;AACA,QAAA,UADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,iBAAA,cADA;AAEA,iBAAA;AAFA,KAAA;AAIA,GAPA;AAQA,WAAA;AACA,qBADA,+BACA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GACA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA,MAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CADA,GACA,CADA;AAEA,KAJA;AAKA,gBALA,0BAKA;AACA,UAAA,OAAA,KAAA,KAAA,CAAA,OAAA,CAAA,KAAA;AACA,aAAA,KAAA,MAAA,CAAA,CAAA,EAAA,WAAA,KAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,KARA;AASA,cATA,wBASA;AACA,UAAA,UAAA;AACA,YAAA,KAAA,iBAAA,EADA;AAEA,cAAA,KAAA,YAAA;AAFA,OAAA;AAIA,WAAA,SAAA,CAAA,IAAA,CAAA,OAAA;AACA,WAAA,gBAAA,CAAA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,KAAA,GAAA,EAAA;AACA,KAjBA;AAkBA,cAlBA,sBAkBA,IAlBA,EAkBA;AACA,UAAA,QAAA,KAAA,SAAA,CAAA,SAAA,CAAA;AAAA,eAAA,QAAA,EAAA,KAAA,IAAA;AAAA,OAAA,CAAA;AACA,WAAA,SAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,WAAA,gBAAA,CAAA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA;AACA,KAtBA;AAuBA,oBAvBA,4BAuBA,eAvBA,EAuBA;AACA,mBAAA,OAAA,CAAA,WAAA,EAAA,eAAA;AACA,KAzBA;AA0BA,gBA1BA,0BA0BA;AAAA;;AACA,UAAA,aAAA,OAAA,CAAA,WAAA,CAAA,EAAA;AACA,YAAA,UAAA,KAAA,KAAA,CAAA,aAAA,OAAA,CAAA,WAAA,CAAA,CAAA;AACA,gBAAA,OAAA,CAAA,mBAAA;AACA,gBAAA,SAAA,CAAA,IAAA,CAAA,OAAA;AACA,SAFA;AAGA;AACA;AAjCA,GARA;AA2CA,SA3CA,qBA2CA;AACA,SAAA,YAAA;AACA;AA7CA,CAAA","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"todo-list__container col-6 m-auto\">\n      <!-- <div class=\"alert alert-secondary\" role=\"alert\">\n        Teste\n      </div> -->\n      <input type=\"text\"\n        class=\"form-control form-control-lg text-center\"\n        v-model=\"listTitle\">\n      <form @submit.prevent=\"addNewItem\">\n        <input type=\"text\"\n        class=\"form-control form-control-lg\"\n        placeholder=\"Add new item...\"\n        ref=\"newItem\">\n      </form>\n      <ul class=\"todo-list__items list-group list-group-flush pb-4\">\n        <p class=\"list-group-item\"\n          v-if=\"listItems.length <= 0\">\n          No items in the list. Try adding one! :)\n        </p>\n        <li \n          v-for=\"item in listItems\"\n          v-bind:key=\"item.id\"\n          @click=\"removeItem(item.id)\"\n          class=\"list-group-item\">\n          {{ item.name }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"TodoList\",\n  data() {\n    return {\n      listTitle: \"Default List\",\n      listItems: []\n    };\n  },\n  methods: {\n    generateNewItemId() {\n      return this.listItems.length > 0 ?\n        this.listItems[this.listItems.length - 1].id + 1 : 0;\n    },\n    generateName() {\n      var name = this.$refs.newItem.value;\n      return name.charAt(0).toUpperCase() + name.slice(1);\n    },\n    addNewItem() {\n      var newItem = {\n        id: this.generateNewItemId(),\n        name: this.generateName()\n      };\n      this.listItems.push(newItem);\n      this.saveLocalStorage(JSON.stringify(this.listItems));\n      this.$refs.newItem.value = '';\n    },\n    removeItem(item) {\n      var index = this.listItems.findIndex(element => element.id === item);\n      this.listItems.splice(index, 1);\n      this.saveLocalStorage(JSON.stringify(this.listItems));\n    },\n    saveLocalStorage(stringListItens) {\n      localStorage.setItem('listItens', stringListItens);\n    },\n    populateList() {\n      if(localStorage.getItem('listItens')) {\n        var storage = JSON.parse(localStorage.getItem('listItens'));\n        storage.forEach(element => {\n          this.listItems.push(element);\n        });\n      }\n    }\n  },\n  created() {\n    this.populateList();\n  }\n};\n</script>\n\n<style scoped>\n.form-control,\n.form-control-lg {\n  border: 0;\n  border-radius: 0;\n}\n.form-control:focus {\n  border-color: transparent;\n  box-shadow: none;\n  -webkit-box-shadow: none;\n}\n.todo-list__items {\n  font-size: 1.25em;\n}\nli { cursor: pointer; }\n</style>\n"],"sourceRoot":"src/components"}]}